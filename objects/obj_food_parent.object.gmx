<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initial distance to menu's origin

    dist_h = x-menu.x;
    dist_v = y-menu.y;

//reserved variable for scroll menu function 
global.shift_h = 0;


//read amount remaining
food_amount=ds_map_find_value(data_ctrl.fridge_inventory,object_index)
//read previoius/next food in order to rearrange menu items when food_amount==0
food_before_me=ds_map_find_previous(data_ctrl.fridge_inventory,object_index)
food_next_me=ds_map_find_next(data_ctrl.fridge_inventory,object_index)




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//stop follow menu when menu is not moving 
if menu.menu_stopped==false
{
    x=dist_h+menu.x+global.shift_h;
    y=dist_v+menu.y+global.shift_h;
}
else
{
    //renew difference referenced to menu origin
    dist_h = x-menu.x;
    dist_v = y-menu.y;
}


/* 
below big chunk of code is used to do this 
move behind food items to cover up blank spaces
*/
if food_amount==0 instance_destroy()
/*these are crap
if food_amount==0
{ 
    if food_next_me !=0
    with food_next_me
      {
       path_add_point(menu_item_rearrange,x,y,30)
       path_add_point(menu_item_rearrange,dest_x,dest_y,30)
       path_start(menu_item_rearrange,30,0,1)
      }
    instance_destroy()
}
if path_position==1
{   
    path_clear_points(menu_item_rearrange)
    if food_next_me!=0
    with food_next_me
    {
        {
        dest_x=food_before_me.x
        dest_y=food_before_me.y
        }
    }
    if  food_next_me !=0
    with food_next_me 
        {
            path_add_point(menu_item_rearrange,x,y,30)
            path_add_point(menu_item_rearrange,dest_x,dest_y,30)
            path_start(menu_item_rearrange,30,0,1)
        }
    
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//m_pressed=1;
//inst = instance_copy(true);
instance_create(mouse_x,mouse_y,obj_feed)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw sprite &amp; corrisponding amount
draw_sprite(sprite_index,0,x,y)
draw_set_color(c_white)
draw_set_font(kirby)
draw_text(x+5,y,food_amount);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
